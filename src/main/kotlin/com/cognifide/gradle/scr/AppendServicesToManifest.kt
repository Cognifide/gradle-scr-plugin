package com.cognifide.gradle.scr

import org.gradle.api.DefaultTask
import org.gradle.api.Project
import org.gradle.api.plugins.JavaPluginConvention
import org.gradle.api.tasks.SourceSet
import org.gradle.api.tasks.TaskAction
import org.gradle.jvm.tasks.Jar
import java.io.File

open class AppendServicesToManifest : DefaultTask() {

    companion object {
        const val TASK_NAME = "appendServicesToManifest"

        const val MANIFEST_ENTRY = "Service-Component"

        const val OSGI_DIR = "OSGI-INF"
    }

    init {
        group = "Build"
        description = "Iterates over xml files generated by ${ProcessSrcAnnotations.MAIN_TASK_NAME} and adds those services to MANIFEST.MF."
    }

    @TaskAction
    fun run() {
        val osgiInfDir = File(mainSourceSet(project).output.classesDir, OSGI_DIR))

        val files = osgiInfDir.listFiles({ File dir, { name ->
            name.endsWith(".xml")
        }})

        if (files.isNotEmpty()) {
            val relFiles = files.collect { file -> OSGI_DIR + '/' + file.name }
            val strFiles = relFiles.join(',')

            logger.info("Created service components: $relFiles")

            val jar = project.tasks.getByName(Jar.TASK_NAME) as Jar
            jar.manifest.attributes(mapOf(
                    MANIFEST_ENTRY to strFiles
            ))
        }
    }

    fun mainSourceSet(project: Project) {
        convention.findPlugin(JavaPluginConvention::class.java)?.sourceSets?.getByName(SourceSet.MAIN_SOURCE_SET_NAME)
    }
}